import xml.etree.ElementTree as ET

tree = ET.parse('royal.xml')
root = tree.getroot()

print("""
@prefix : <http://rpcw.di.uminho.pt/2024/familia/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://rpcw.di.uminho.pt/2024/familia/> .

<http://rpcw.di.uminho.pt/2024/familia> rdf:type owl:Ontology .

#################################################################
#    Object Properties
#################################################################

###  http://rpcw.di.uminho.pt/2024/familia/temMae
:temMae rdf:type owl:ObjectProperty ;
        rdfs:domain :Pessoa ;
        rdfs:range :Pessoa .


###  http://rpcw.di.uminho.pt/2024/familia/temPai
:temPai rdf:type owl:ObjectProperty ;
        rdfs:domain :Pessoa ;
        rdfs:range :Pessoa .


#################################################################
#    Data properties
#################################################################

###  http://rpcw.di.uminho.pt/2024/familia/nome
:nome rdf:type owl:DatatypeProperty .


#################################################################
#    Classes
#################################################################

###  http://rpcw.di.uminho.pt/2024/familia/Pessoa
:Pessoa rdf:type owl:Class .


#################################################################
#    Individuals
#################################################################
""")

for person in root.findall('.//person'):
    id = person.find('id').text
    name = person.find('name').text

    print(f"""
###  http://rpcw.di.uminho.pt/2024/familia#{id}
:{id} rdf:type owl:NamedIndividual ,
                 :Pessoa ;
        :nome "{name}" .
""")

    parent_sex = None
    for parent_ref in person.findall('parent'):
        parent_id = parent_ref.get('ref')
        parent = root.find(f'.//person[id="{parent_id}"]')
        parent_sex = parent.find('sex').text

        if parent_sex == 'F':
                print(f':{id} :temMae :{parent_id} .')
        elif parent_sex == 'M':
                print(f':{id} :temPai :{parent_id} .')

print("###  Generated by the OWL API (version 4.5.26.2023-07-17T20:34:13Z) https://github.com/owlcs/owlapi")